@model WebAppConfigLV.Models.UsuarioViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>UsuarioViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        
        <label class="control-label col-md-2" >Sigla</label>
        
        <div class="col-md-10">
            @Model.GuidUsuario
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" >Login</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sigla, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sigla, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsVerificador, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsVerificador)
                @Html.ValidationMessageFor(model => model.IsVerificador, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsConfigurador, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsConfigurador)
                @Html.ValidationMessageFor(model => model.IsConfigurador, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsGestor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsGestor)
                @Html.ValidationMessageFor(model => model.IsGestor, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.GuidUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GuidUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GuidUsuario, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @Html.HiddenFor(model => model.GuidUsuario);
    @Html.HiddenFor(model => model.Senha);

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div> 
<div>
    @Html.ActionLink("Edita Disciplinas do Usuário", "EditaDisciplinasUser",new {guid =  Model.GuidUsuario})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
